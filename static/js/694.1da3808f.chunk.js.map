{"version":3,"file":"static/js/694.1da3808f.chunk.js","mappings":"iLACA,QAAmC,gC,uBCOnC,MAiDA,GAAeA,EAAAA,EAAAA,KALUC,IAAK,CAC1BC,WAAYD,EAAME,KAAKD,WACvBE,OAAQH,EAAME,KAAKC,UAGiB,CAAEC,MAAM,MAAhD,EAjDcC,IAA+B,IAA9B,WAAEJ,KAAeK,GAAOD,EAEnC,MAAM,SACFE,EAAQ,aACRC,EACAC,WAAW,OAAEC,GAAQ,MACrBC,IACAC,EAAAA,EAAAA,IAAQ,CACRC,KAAM,aAQV,OAAIP,EAAMH,QACCW,EAAAA,EAAAA,KAACC,EAAAA,GAAQ,CAACC,GAAI,cAGlBC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACHJ,EAAAA,EAAAA,KAAA,MAAAI,SAAI,WACJD,EAAAA,EAAAA,MAAA,QAAME,SAAUX,GAXFY,IACdd,EAAMF,MAAMgB,EAASC,MAAOD,EAASE,SAAUF,EAASG,WAAYH,EAASI,SAC7Eb,GAAO,IASgCO,SAAA,EAClCO,EAAAA,EAAAA,GAAa,QAAS,QAAS,QAASlB,EAAU,SAAS,EAAM,GAAI,oGACrEkB,EAAAA,EAAAA,GAAa,QAAS,WAAY,WAAYlB,EAAU,YAAY,EAAM,GAAI,oGAC9EkB,EAAAA,EAAAA,GAAa,QAAS,WAAY,GAAIlB,EAAU,aAAc,GAAI,KAAM,GAAI,gBAE7EU,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CAEKjB,IAAca,EAAAA,EAAAA,KAAA,OAAKY,IAAKzB,EAAY0B,IAAI,MACxC1B,IAAcwB,EAAAA,EAAAA,GAAa,QAAS,GAAI,GAAIlB,EAAU,kBAE3DU,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACKR,EAAOW,QAASP,EAAAA,EAAAA,KAAA,KAAGc,UAAWC,EAAqBX,SAAER,EAAOW,MAAMS,SAAW,UAC7EpB,EAAOY,WAAYR,EAAAA,EAAAA,KAAA,KAAGc,UAAWC,EAAqBX,SAAER,EAAOY,SAASQ,SAAW,cAGxFhB,EAAAA,EAAAA,KAAA,UAAAI,SAAS,eAEX,G","sources":["webpack://my-app/./src/components/login/login.module.css?e6ba","components/login/login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formSummeryError\":\"login_formSummeryError__vQS3A\"};","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../REDUX/reducers/authReducer\";\nimport { Navigate } from \"react-router-dom\";\nimport css from './login.module.css'\nimport { createFields } from \"../../common/formsControls/formControls\";\n\nconst Login = ({ captchaURL, ...props }) => {\n\n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n        reset,\n    } = useForm({\n        mode: 'onChange'\n    })\n\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\n        reset();\n    }\n\n    if (props.isAuth) {\n        return <Navigate to={'/profile'} />\n    }\n\n    return <div>\n        <h1>LOGIN</h1>\n        <form onSubmit={handleSubmit(onSubmit)}>\n            {createFields('input', \"email\", \"email\", register, \"email\", true, 20, \"не более 20 символов\")}\n            {createFields('input', \"password\", \"password\", register, \"password\", true, 20, \"не более 20 символов\")}\n            {createFields('input', \"checkbox\", \"\", register, \"rememberMe\", '', null, \"\", \"remember me\")}\n\n            <div>\n                {/*каптча и  поле ввода каптчи  */}\n                {captchaURL && <img src={captchaURL} alt=\"#\" />}\n                {captchaURL && createFields('input', \"\", \"\", register, \"captchaURL\")}\n            </div>\n            <div>\n                {errors.email && <p className={css.formSummeryError}>{errors.email.message || 'error'}</p>}\n                {errors.password && <p className={css.formSummeryError}>{errors.password.message || 'error'}</p>}\n            </div>\n\n            <button >LOGIN</button>\n        </form>\n    </div>\n}\n\n\n\nconst mapStateToProps = (state) => ({\n    captchaURL: state.auth.captchaURL,\n    isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps, { login })(Login);\n\n"],"names":["connect","state","captchaURL","auth","isAuth","login","_ref","props","register","handleSubmit","formState","errors","reset","useForm","mode","_jsx","Navigate","to","_jsxs","children","onSubmit","formData","email","password","rememberMe","captcha","createFields","src","alt","className","css","message"],"sourceRoot":""}