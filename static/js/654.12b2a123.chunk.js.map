{"version":3,"file":"static/js/654.12b2a123.chunk.js","mappings":"uNASA,MAoBMA,GAAiBC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,SAAlBD,EApBLE,IAA0C,IAAzC,aAAEC,EAAY,MAAEC,EAAK,WAAEC,GAAYH,EAClD,MAAMI,GAAcC,EAAAA,EAAAA,GAAiB,IACrC,OACIC,EAAAA,EAAAA,MAAA,QAAMC,SAAUN,EAAaO,SAAA,EAExBC,EAAAA,EAAAA,IAAY,QAAS,QAAS,CAACC,EAAAA,EAAUN,GAAcO,EAAAA,KACvDF,EAAAA,EAAAA,IAAY,WAAY,WAAY,CAACC,EAAAA,EAAUN,GAAcO,EAAAA,GAAO,CAAEC,KAAM,cAC5EH,EAAAA,EAAAA,IAAY,KAAM,aAAc,GAAIE,EAAAA,GAAO,CAAEC,KAAM,YAAc,eAGjET,IAAcU,EAAAA,EAAAA,KAAA,OAAKC,IAAKX,EAAYY,IAAI,MACxCZ,IAAcM,EAAAA,EAAAA,IAAY,wFAAmB,UAAW,CAACC,EAAAA,GAAWC,EAAAA,GAAO,CAAC,IAE7EE,EAAAA,EAAAA,KAAA,OAAAL,SACKN,IAASW,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAAA,EAAIC,iBAAiBV,SAAEN,OAErDW,EAAAA,EAAAA,KAAA,UAAAL,SAAQ,YACL,IAwBf,GAAeW,EAAAA,EAAAA,KALUC,IAAK,CAC1BjB,WAAYiB,EAAMC,KAAKlB,WACvBmB,OAAQF,EAAMC,KAAKC,UAGiB,CAAEC,MAAM,MAAhD,EAnBeC,GAIPA,EAAMF,QACCT,EAAAA,EAAAA,KAACY,EAAAA,GAAQ,CAACC,GAAI,cAGlBpB,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACHK,EAAAA,EAAAA,KAAA,MAAAL,SAAI,WACJK,EAAAA,EAAAA,KAAChB,EAAc,CAACU,SATFoB,IACdH,EAAMD,MAAMI,EAASC,MAAOD,EAASE,SAAUF,EAASG,WAAYH,EAASI,QAAQ,EAQjD5B,WAAYqB,EAAMrB,iB","sources":["components/login/login.jsx"],"sourcesContent":["import React from \"react\";\nimport { reduxForm } from \"redux-form\";\nimport { Input, createField } from \"../../common/formsControls/formControls\";\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../REDUX/reducers/authReducer\";\nimport { Navigate } from \"react-router-dom\";\nimport css from '../../common/formsControls/formControls.module.css'\n\nconst LoginForm = ({ handleSubmit, error, captchaURL }) => {\n    const maxLength20 = maxLengthCreator(20);\n    return (\n        <form onSubmit={handleSubmit}>\n\n            {createField(\"email\", \"email\", [required, maxLength20], Input)}\n            {createField(\"password\", \"password\", [required, maxLength20], Input, { type: \"password\" })}\n            {createField(null, \"rememberMe\", [], Input, { type: \"checkbox\" }, \"remember me\")}\n\n            {/*каптча и  поле ввода каптчи  */}\n            {captchaURL && <img src={captchaURL} alt=\"#\" />}\n            {captchaURL && createField('введите символы', 'captcha', [required], Input, {})}\n\n            <div>\n                {error && <div className={css.formSummeryError}>{error}</div>}\n            </div>\n            <button>LOGIN</button>\n        </form>\n    )\n}\nconst LoginReduxForm = reduxForm({ form: \"login\" })(LoginForm)\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\n    }\n    if (props.isAuth) {\n        return <Navigate to={'/profile'} />\n    }\n\n    return <div>\n        <h1>LOGIN</h1>\n        <LoginReduxForm onSubmit={onSubmit} captchaURL={props.captchaURL} />\n    </div>\n}\n\nconst mapStateToProps = (state) => ({\n    captchaURL: state.auth.captchaURL,\n    isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps, { login })(Login);\n\n"],"names":["LoginReduxForm","reduxForm","form","_ref","handleSubmit","error","captchaURL","maxLength20","maxLengthCreator","_jsxs","onSubmit","children","createField","required","Input","type","_jsx","src","alt","className","css","formSummeryError","connect","state","auth","isAuth","login","props","Navigate","to","formData","email","password","rememberMe","captcha"],"sourceRoot":""}