{"version":3,"file":"static/js/930.804e2cd6.chunk.js","mappings":"qIACA,QAAgC,oCAAhC,EAA4E,4BAA5E,EAAmH,+B,uBCGnH,MAUA,EAVqBA,IAAwB,IAAvB,cAAEC,GAAeD,EAEnC,MAAME,EAAOD,EAAcE,KAAIC,IAASC,EAAAA,EAAAA,KAACC,EAAW,CAAeC,GAAIH,EAAKG,GAAIL,KAAME,EAAKF,KAAMM,QAASJ,EAAKK,OAArDL,EAAKG,MAE/D,OACIF,EAAAA,EAAAA,KAAA,OAAAK,SACKR,GACC,EAMRI,EAAcK,IAA4B,IAA3B,GAAEJ,EAAE,KAAEL,EAAI,QAAEM,GAASG,EACtC,OACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAkBJ,SAAA,EAC9BL,EAAAA,EAAAA,KAAA,OAAKQ,UAAWC,EAAUJ,UAACL,EAAAA,EAAAA,KAACU,EAAAA,GAAO,CAACC,GAAE,aAAAC,OAAeV,GAAKG,SAAGR,OAC7DG,EAAAA,EAAAA,KAAA,OAAKQ,UAAWC,EAAaJ,SACxBF,MAEH,E,oDCDd,MA4BA,EA5BwBR,IAA6B,IAA5B,mBAAEkB,GAAoBlB,EAE3C,MAAM,SAAEmB,EAAQ,aACZC,EACAC,WAAW,OAAEC,EAAM,QAAEC,GAAS,MAC9BC,IACAC,EAAAA,EAAAA,IAAQ,CACRC,KAAM,aAOV,OACId,EAAAA,EAAAA,MAAA,QAAMe,SAAUP,GALGQ,IACnBV,EAAmBU,EAAOC,WAC1BL,GAAO,IAGqCd,SAAA,EACxCL,EAAAA,EAAAA,KAAA,eAAcc,EAAS,YAAa,CAChCW,SAAU,kKACVC,UAAW,CACPtB,MAAO,GACPD,QAAS,mKAGhBc,EAAOO,YAAaxB,EAAAA,EAAAA,KAAA,KAAG2B,MAAO,CAAEC,MAAO,OAAQvB,SAAEY,EAAOO,UAAUrB,SAAW,WAC9EH,EAAAA,EAAAA,KAAA,UAAQ6B,UAAWX,EAAQb,SAAC,WACzB,ECvBf,SAAeyB,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KAPmBC,IACZ,CACHpC,cAAeoC,EAAMC,aAAarC,iBAKb,CAAEiB,mBAAmB,OAC9CqB,EAAAA,EAFJ,EAhBiBvC,IAA4C,IAA3C,cAAEC,EAAa,mBAAEiB,GAAoBlB,EAEnD,OACIY,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACIL,EAAAA,EAAAA,KAACmC,EAAY,CAACvC,cAAeA,KAC7BI,EAAAA,EAAAA,KAACoC,EAAe,CAACvB,mBAAoBA,MACnC,G","sources":["webpack://my-app/./src/components/messages/userMessages.module.css?ffbf","components/messages/userMessages.jsx","components/messages/createMyMessage.jsx","components/messages/messages.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"usersMessages\":\"userMessages_usersMessages__tQlfd\",\"names\":\"userMessages_names__S2XeC\",\"messages\":\"userMessages_messages__dbo4X\"};","import React from \"react\";\nimport css from './userMessages.module.css';\nimport { NavLink } from \"react-router-dom\";\n\nconst UserMessages = ({ usersMessages }) => {\n\n    const name = usersMessages.map(item => (<UserMessage key={item.id} id={item.id} name={item.name} message={item.value} />));\n\n    return (\n        <div>\n            {name}\n        </div>\n    )\n}\nexport default UserMessages;\n\n\nconst UserMessage = ({ id, name, message }) => {\n    return (\n        <div className={css.usersMessages}>\n            <div className={css.names}><NavLink to={`/messages/${id}`} >{name}</NavLink></div>\n            <div className={css.messages}>\n                {message}\n            </div>\n        </div>\n    )\n}\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\n\n// import { Field, reduxForm } from \"redux-form\";\n// import { Textarea } from \"../../common/formsControls/formControls\";\n// import { maxLengthCreator, required } from \"../../utils/validators/validators\";\n\n// const MyMessage = ({ handleSubmit }) => {\n//     const maxLength50 = maxLengthCreator(50)\n//     return (\n//         <form onSubmit={handleSubmit}>\n//             <div><Field placeholder=\"Enter your message\" name={'myMessage'} component={Textarea} validate={[required, maxLength50]} /></div>\n//             <button>Send</button>\n//         </form>\n//     )\n// }\n\n// const MessageReduxForm = reduxForm({ form: \"myMessage\" })(MyMessage)\n// const CreateMyMessage = ({ sendMessageCreator }) => {\n//     const addNewMessage = (values) => {sendMessageCreator(values.myMessage)}\n//     return <div><MessageReduxForm onSubmit={addNewMessage} /></div>\n// }\n\nconst CreateMyMessage = ({ sendMessageCreator }) => {\n\n    const { register,\n        handleSubmit,\n        formState: { errors, isValid },\n        reset,\n    } = useForm({\n        mode: \"onChange\"\n    });\n\n    const addNewMessage = (values) => {\n        sendMessageCreator(values.myMessage);\n        reset();\n    }\n    return (\n        <form onSubmit={handleSubmit(addNewMessage)}>\n            <textarea {...register('myMessage', {\n                required: \"поле обязательно к заполнению\",\n                maxLength: {\n                    value: 50,\n                    message: \"максимальная длина 50 символов\"\n                }\n            })}></textarea>\n            {errors.myMessage && <p style={{ color: 'red' }}>{errors.myMessage.message || 'error'}</p>}\n            <button disabled={!isValid}>Send</button>\n        </form>\n    )\n}\nexport default CreateMyMessage;\n\n\n","import React from \"react\";\nimport UserMessages from \"./userMessages\";\nimport { compose } from \"redux\";\nimport { sendMessageCreator } from \"../../REDUX/reducers/messageReducer\"\nimport { WithAuthRedirect } from \"../hoc/withAuthRedirect\";\nimport { connect } from \"react-redux\";\nimport CreateMyMessage from \"./createMyMessage\";\n\n\nconst Messages = ({ usersMessages, sendMessageCreator }) => {\n\n    return (\n        <div>\n            <UserMessages usersMessages={usersMessages} />\n            <CreateMyMessage sendMessageCreator={sendMessageCreator} />\n        </div>\n    )\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        usersMessages: state.messagesPage.usersMessages,\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, { sendMessageCreator }),\n    WithAuthRedirect      //если нет аутентификации - переход на /login\n)(Messages)"],"names":["_ref","usersMessages","name","map","item","_jsx","UserMessage","id","message","value","children","_ref2","_jsxs","className","css","NavLink","to","concat","sendMessageCreator","register","handleSubmit","formState","errors","isValid","reset","useForm","mode","onSubmit","values","myMessage","required","maxLength","style","color","disabled","compose","connect","state","messagesPage","WithAuthRedirect","UserMessages","CreateMyMessage"],"sourceRoot":""}